"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–∏—Å–∫–∞
"""

from aiogram import Router, types, F

from core.services import user_service
from keyboards.inline import get_callback_buttons
from routers.base_commands import error_text
from routers.parameters_info import parameters_info

router = Router(name=__name__)


@router.callback_query(
    F.data == "camera_resolution",
)
async def camera_resolution_parameters_edit_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_resolution" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_resolution # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_resolution: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {parameter_value} –ú–ø" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_resolution}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_resolution", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_resolution", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_sensitivity_day_x10000",
)
async def camera_sensitivity_day_x10000_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_sensitivity_day_x10000" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_sensitivity_day_x10000/10000 # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_sensitivity_day_x10000: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –æ—Ç {parameter_value} –ª–∫ –∏ –ª—É—á—à–µ" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_sensitivity_day_x10000}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_sensitivity_day_x10000", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_sensitivity_day_x10000", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_IR_illumination",
)
async def camera_IR_illumination_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_IR_illumination" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_IR_illumination # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_IR_illumination: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–ò–ö-–ø–æ–¥—Å–≤–µ—Ç–∫–∞" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –¥–æ {parameter_value} –º –∏–ª–∏ –¥–∞–ª—å—à–µ" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_IR_illumination}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_IR_illumination", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_IR_illumination", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_operating_temperature_min",
)
async def camera_operating_temperature_min_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_operating_temperature_min" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_operating_temperature_min # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_operating_temperature_min: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –¥–æ {parameter_value} ¬∞C –∏–ª–∏ –Ω–∏–∂–µ" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_min}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_operating_temperature_min", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_min", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_operating_temperature_max",
)
async def camera_operating_temperature_max_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_operating_temperature_max" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_operating_temperature_max # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_operating_temperature_max: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –¥–æ {parameter_value} ¬∞C –∏–ª–∏ –≤—ã—à–µ" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_max}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_operating_temperature_max", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_max", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_data_transfer_interface",
)
async def camera_data_transfer_interface_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_data_transfer_interface" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_data_transfer_interface # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_data_transfer_interface: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "—Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {parameter_value}" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_data_transfer_interface}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_data_transfer_interface", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_data_transfer_interface", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_power_supply_poe",
)
async def camera_power_supply_poe_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_power_supply_poe" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_power_supply_poe # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_power_supply_poe: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–ø–æ–¥–¥–µ—Ä–∂–∫–∞ POE" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –µ—Å—Ç—å" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_power_supply_poe}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "set_camera_power_supply_poe", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_power_supply_poe", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_lightning_protection",
)
async def camera_lightning_protection_parameters_edit_callback(
    callback: types.CallbackQuery,
):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_lightning_protection" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_lightning_protection # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_lightning_protection: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–≥—Ä–æ–∑–æ–∑–∞—â–∏—Ç–∞" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –µ—Å—Ç—å" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_lightning_protection}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "set_camera_lightning_protection", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_lightning_protection", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "camera_comment",
)
async def camera_comment_parameters_edit_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "camera_comment" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        parameter_value = user.camera_comment # –ò–∑–º–µ–Ω–∏—Ç—å
        parameter_search = "‚ùå –ù–µ—Ç"
        if user.search_camera_comment: # –ò–∑–º–µ–Ω–∏—Ç—å
            parameter_search = "‚úÖ –î–∞"
        parameter_name = "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" # –ò–∑–º–µ–Ω–∏—Ç—å
        text = f"–ü–∞—Ä–∞–º–µ—Ç—Ä: <b>{parameter_name}</b> \
            \n–£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {parameter_search} \
            \n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {parameter_value}" # –ò–∑–º–µ–Ω–∏—Ç—å
        await callback.message.edit_text(text=text)
        await callback.message.answer(
            text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_comment}", # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "set_camera_comment", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_comment", # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üìö Help page": "help",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )
