"""
–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ –ø–æ–∏—Å–∫–∞
"""

from aiogram import Router, types, F

from core.services import user_service
from keyboards.inline import get_callback_buttons
from routers.base_commands import error_text
from routers.parameters_info import parameters_info

router = Router(name=__name__)


@router.callback_query(
    F.data == "off_camera_resolution", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_resolution_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_resolution" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_resolution: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_resolution = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_resolution}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_resolution", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_sensitivity_day_x10000", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_sensitivity_day_x10000_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_sensitivity_day_x10000" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_sensitivity_day_x10000: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_sensitivity_day_x10000 = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_sensitivity_day_x10000}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_sensitivity_day_x10000", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_IR_illumination", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_IR_illumination_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_IR_illumination" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_IR_illumination: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_IR_illumination = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_IR_illumination}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_IR_illumination", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_operating_temperature_min", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_operating_temperature_min_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_operating_temperature_min" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_operating_temperature_min: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_operating_temperature_min = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_min}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_operating_temperature_min", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_operating_temperature_max", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_operating_temperature_max_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_operating_temperature_max" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_operating_temperature_max: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_operating_temperature_max = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_max}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_operating_temperature_max", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "off_camera_data_transfer_interface", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_data_transfer_interface_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_data_transfer_interface" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_data_transfer_interface: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_data_transfer_interface = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_data_transfer_interface}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_data_transfer_interface", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "off_camera_power_supply_poe", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_power_supply_poe_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_power_supply_poe" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_power_supply_poe: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_power_supply_poe = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_power_supply_poe}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_power_supply_poe", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_lightning_protection", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_lightning_protection_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_lightning_protection" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_lightning_protection: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_lightning_protection = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_lightning_protection}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_lightning_protection", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )

@router.callback_query(
    F.data == "off_camera_comment", # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def off_camera_comment_callback(callback: types.CallbackQuery): # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "off_camera_comment" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_comment: # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_comment = False # –ò–∑–º–µ–Ω–∏—Ç—å
            if await user_service.update(user=user):
                await callback.message.edit_text(
                    text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_comment}\n‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞", # –ò–∑–º–µ–Ω–∏—Ç—å
                )
                await callback.message.answer(
                    text="–≠—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞.",
                    reply_markup=get_callback_buttons(
                        buttons={
                            "üîé –ù–∞–π—Ç–∏": "search",
                            "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            "‚úÖ –£—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ": "set_camera_comment", # –ò–∑–º–µ–Ω–∏—Ç—å
                        },
                        sizes=(2,),
                    ),
                )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )
