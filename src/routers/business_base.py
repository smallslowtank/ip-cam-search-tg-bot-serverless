"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∏
"""

from aiogram import Router, types, F

from keyboards.inline import get_callback_buttons
from routers.utils import create_list_of_cameras, create_list_of_parameters
from routers.base_commands import error_text

router = Router(name=__name__)

main_page_text = "üìù Main page. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.\n–ö–∞–∫–æ–π —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?"
search_page_text = "–ü—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏ —Å–ø–∏—Å–æ–∫ –∫–∞–º–µ—Ä."


@router.callback_query(
    F.data == "main",
)
async def main_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "main" (–∫–æ–ª–ª–±—ç–∫)
    """
    await callback.message.edit_text(
        text=main_page_text,
        reply_markup=get_callback_buttons(
            buttons={
                "ü§ñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫": "search_ai",
                "üëç –ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º": "search_by_parameters",
                "üìö Help page": "help",
            },
            sizes=(1,),
        ),
    )


@router.callback_query(
    F.data == "search_by_parameters",
)
async def search_by_parameters_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "search_by_parameters" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        list_parameters_search_page_text = await create_list_of_parameters(
            user_id=user_id
        )
        await callback.message.edit_text(
            text=list_parameters_search_page_text,
            reply_markup=get_callback_buttons(
                buttons={
                    "üìö Help page": "help",
                    "üìù Main page": "main",
                    "üõ† –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                    "üîé –ù–∞–π—Ç–∏": "search",
                },
                sizes=(2,2,),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "search",
)
async def search_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "search" (–∫–æ–ª–ª–±—ç–∫)
    """
    try:
        user_id = callback.from_user.id
        list_parameters_search_page_text = await create_list_of_parameters(
            user_id=user_id
        )
        await callback.message.edit_text(
            text=f"{list_parameters_search_page_text}\n<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:</b>",
        )
        list_cameras_search_page_text = await create_list_of_cameras(user_id=user_id)
        await callback.message.answer(
            text=list_cameras_search_page_text,
        )
        await callback.message.answer(
            text=search_page_text,
            reply_markup=get_callback_buttons(
                buttons={
                    "üìö Help page": "help",
                    "üìù Main page": "main",
                    "üõ† –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(2,),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "search_ai",
)
async def search_ai_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "search_ai" (–∫–æ–ª–ª–±—ç–∫)
    """
    await callback.message.edit_text(
        text="ü§ñ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        reply_markup=get_callback_buttons(
            buttons={
                "üìö Help page": "help",
                "üìù Main page": "main",
                "üëç –ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º": "search_by_parameters",
            },
            sizes=(2,),
        ),
    )


@router.callback_query(
    F.data == "parameters_edit",
)
async def parameters_edit_callback(callback: types.CallbackQuery):
    """
    –ö–æ–º–∞–Ω–¥–∞ "parameters_edit" (–∫–æ–ª–ª–±—ç–∫)
    """
    user_id = callback.from_user.id
    list_parameters_search_page_text = await create_list_of_parameters(
        user_id=user_id
    )
    await callback.message.edit_text(
        text=f"{list_parameters_search_page_text}\nüõ† <b>–ö–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å?</b>",
        reply_markup=get_callback_buttons(
            buttons={
                "üìù Main page": "main",
                "üîé –ù–∞–π—Ç–∏": "search",
                "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ": "camera_resolution",
                "–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å": "camera_sensitivity_day_x10000",
                "–ò–ö-–ø–æ–¥—Å–≤–µ—Ç–∫–∞": "camera_IR_illumination",
                "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (min)": "camera_operating_temperature_min",
                "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (max)": "camera_operating_temperature_max",
                "–°–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å": "camera_data_transfer_interface",
                "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ POE": "camera_power_supply_poe",
                "–ì—Ä–æ–∑–æ–∑–∞—â–∏—Ç–∞": "camera_lightning_protection",
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": "camera_comment",
            },
            sizes=(2,),
        ),
    )
