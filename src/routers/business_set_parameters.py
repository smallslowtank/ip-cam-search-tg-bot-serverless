"""
–í–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –ø–æ–∏—Å–∫ –∏ –≤—ã–±–æ—Ä –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
"""

from aiogram import Router, types, F

from core.services import user_service
from keyboards.inline import get_callback_buttons
from routers.base_commands import error_text
from routers.parameters_info import parameters_info

router = Router(name=__name__)


@router.callback_query(
    F.data == "set_camera_resolution",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_resolution_callback(callback: types.CallbackQuery):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_resolution" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_resolution == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_resolution = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_resolution}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_resolution} –ú–ø\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "2 –ú–ø": "set_camera_resolution_2",
                    "4 –ú–ø": "set_camera_resolution_4",
                    "5 –ú–ø": "set_camera_resolution_5",
                    "8 –ú–ø": "set_camera_resolution_8",
                    "10 –ú–ø": "set_camera_resolution_10",
                    "12 –ú–ø": "set_camera_resolution_12",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_resolution",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(3, 3, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_resolution_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_resolution_N_callback(callback: types.CallbackQuery):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_resolution_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = int(callback.data.split("_")[3])  # –ò–∑–º–µ–Ω–∏—Ç—å
        if value in (2, 4, 5, 8, 10, 12):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_resolution != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_resolution = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_resolution} –ú–ø\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "2 –ú–ø": "set_camera_resolution_2",
                                "4 –ú–ø": "set_camera_resolution_4",
                                "5 –ú–ø": "set_camera_resolution_5",
                                "8 –ú–ø": "set_camera_resolution_8",
                                "10 –ú–ø": "set_camera_resolution_10",
                                "12 –ú–ø": "set_camera_resolution_12",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_resolution",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(3, 3, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_sensitivity_day_x10000",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_sensitivity_day_x10000_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_sensitivity_day_x10000" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_sensitivity_day_x10000 == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_sensitivity_day_x10000 = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_sensitivity_day_x10000}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_sensitivity_day_x10000/10000} –ª–∫\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "–æ—Ç 0.1 –ª–∫": "set_camera_sensitivity_day_x10000_1000",
                    "–æ—Ç 0.01 –ª–∫": "set_camera_sensitivity_day_x10000_100",
                    "–æ—Ç 0.001 –ª–∫": "set_camera_sensitivity_day_x10000_10",
                    "–æ—Ç 0.0001 –ª–∫": "set_camera_sensitivity_day_x10000_1",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_sensitivity_day_x10000",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(2, 2, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_sensitivity_day_x10000_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_sensitivity_day_x10000_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_sensitivity_day_x10000_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = int(callback.data.split("_")[5])
        if value in (1, 10, 100, 1000):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_sensitivity_day_x10000 != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_sensitivity_day_x10000 = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_sensitivity_day_x10000/10000} –ª–∫\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "–æ—Ç 0.1 –ª–∫": "set_camera_sensitivity_day_x10000_1000",
                                "–æ—Ç 0.01 –ª–∫": "set_camera_sensitivity_day_x10000_100",
                                "–æ—Ç 0.001 –ª–∫": "set_camera_sensitivity_day_x10000_10",
                                "–æ—Ç 0.0001 –ª–∫": "set_camera_sensitivity_day_x10000_1",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_sensitivity_day_x10000",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(2, 2, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_IR_illumination",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_IR_illumination_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_IR_illumination" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_IR_illumination == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_IR_illumination = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_IR_illumination}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_IR_illumination} –º –∏–ª–∏ –±–æ–ª—å—à–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "10 –º": "set_camera_IR_illumination_10",
                    "30 –º": "set_camera_IR_illumination_30",
                    "50 –º": "set_camera_IR_illumination_50",
                    "100 –º": "set_camera_IR_illumination_100",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_IR_illumination",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(4, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_IR_illumination_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_IR_illumination_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_IR_illumination_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = int(callback.data.split("_")[4])
        if value in (10, 30, 50, 100):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_IR_illumination != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_IR_illumination = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_IR_illumination} –º –∏–ª–∏ –±–æ–ª—å—à–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "10 –º": "set_camera_IR_illumination_10",
                                "30 –º": "set_camera_IR_illumination_30",
                                "50 –º": "set_camera_IR_illumination_50",
                                "100 –º": "set_camera_IR_illumination_100",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_IR_illumination",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(4, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_operating_temperature_min",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_operating_temperature_min_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_operating_temperature_min" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_operating_temperature_min == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_operating_temperature_min = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_min}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_operating_temperature_min} ¬∞C –∏–ª–∏ –Ω–∏–∂–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "-10 ¬∞C": "set_camera_operating_temperature_min_-10",
                    "-20 ¬∞C": "set_camera_operating_temperature_min_-20",
                    "-30 ¬∞C": "set_camera_operating_temperature_min_-30",
                    "-40 ¬∞C": "set_camera_operating_temperature_min_-40",
                    "-50 ¬∞C": "set_camera_operating_temperature_min_-50",
                    "-60 ¬∞C": "set_camera_operating_temperature_min_-60",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_min",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(3, 3, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_operating_temperature_min_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_operating_temperature_min_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_operating_temperature_min_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = int(callback.data.split("_")[5])  # –ò–∑–º–µ–Ω–∏—Ç—å
        if value in (-10, -20, -30, -40, -50, -60):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_operating_temperature_min != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_operating_temperature_min = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_operating_temperature_min} ¬∞C –∏–ª–∏ –Ω–∏–∂–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "-10 ¬∞C": "set_camera_operating_temperature_min_-10",
                                "-20 ¬∞C": "set_camera_operating_temperature_min_-20",
                                "-30 ¬∞C": "set_camera_operating_temperature_min_-30",
                                "-40 ¬∞C": "set_camera_operating_temperature_min_-40",
                                "-50 ¬∞C": "set_camera_operating_temperature_min_-50",
                                "-60 ¬∞C": "set_camera_operating_temperature_min_-60",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_min",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(3, 3, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_operating_temperature_max",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_operating_temperature_max_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_operating_temperature_max" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_operating_temperature_max == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_operating_temperature_max = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_operating_temperature_max}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_operating_temperature_max} ¬∞C –∏–ª–∏ –≤—ã—à–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "30 ¬∞C": "set_camera_operating_temperature_max_30",
                    "40 ¬∞C": "set_camera_operating_temperature_max_40",
                    "50 ¬∞C": "set_camera_operating_temperature_max_50",
                    "60 ¬∞C": "set_camera_operating_temperature_max_60",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_max",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(4, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_operating_temperature_max_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_operating_temperature_max_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_operating_temperature_max_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = int(callback.data.split("_")[5])  # –ò–∑–º–µ–Ω–∏—Ç—å
        if value in (30, 40, 50, 60):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_operating_temperature_max != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_operating_temperature_max = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_operating_temperature_max} ¬∞C –∏–ª–∏ –≤—ã—à–µ\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "30 ¬∞C": "set_camera_operating_temperature_max_30",
                                "40 ¬∞C": "set_camera_operating_temperature_max_40",
                                "50 ¬∞C": "set_camera_operating_temperature_max_50",
                                "60 ¬∞C": "set_camera_operating_temperature_max_60",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_operating_temperature_max",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(4, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_data_transfer_interface",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_data_transfer_interface_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_data_transfer_interface" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_data_transfer_interface == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_data_transfer_interface = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_data_transfer_interface}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_data_transfer_interface}\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "RJ45": "set_camera_data_transfer_interface_RJ45",
                    # "BNC": "set_camera_data_transfer_interface_BNC",
                    # "RS-485": "set_camera_data_transfer_interface_RS-485",
                    # "SFP": "set_camera_data_transfer_interface_SFP",
                    "Wi-Fi": "set_camera_data_transfer_interface_Wi-Fi",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_data_transfer_interface",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(2, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_data_transfer_interface_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_data_transfer_interface_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_data_transfer_interface_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = callback.data.split("_")[5]  # –ò–∑–º–µ–Ω–∏—Ç—å
        if value in ("RJ45", "BNC", "RS-485", "SFP", "Wi-Fi"):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_data_transfer_interface != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_data_transfer_interface = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_data_transfer_interface}\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "RJ45": "set_camera_data_transfer_interface_RJ45",
                                # "BNC": "set_camera_data_transfer_interface_BNC",
                                # "RS-485": "set_camera_data_transfer_interface_RS-485",
                                # "SFP": "set_camera_data_transfer_interface_SFP",
                                "Wi-Fi": "set_camera_data_transfer_interface_Wi-Fi",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_data_transfer_interface",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(2, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_power_supply_poe",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_power_supply_poe_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_power_supply_poe" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_power_supply_poe == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_power_supply_poe = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_power_supply_poe}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: –µ—Å—Ç—å",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_power_supply_poe",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_lightning_protection",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_lightning_protection_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_lightning_protection" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_lightning_protection == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_lightning_protection = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_lightning_protection}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: –µ—Å—Ç—å",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_lightning_protection",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data == "set_camera_comment",  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_comment_callback(callback: types.CallbackQuery):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_comment" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        user_id = callback.from_user.id
        user = await user_service.get_by_id(user_id=user_id)
        if user.search_camera_comment == False:  # –ò–∑–º–µ–Ω–∏—Ç—å
            user.search_camera_comment = True  # –ò–∑–º–µ–Ω–∏—Ç—å
            await user_service.update(user=user)
            await callback.message.edit_text(
                text=f"‚ÑπÔ∏è <u>–°–ø—Ä–∞–≤–∫–∞:</u> {parameters_info.info_camera_comment}\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –≤–∫–ª—é—á–µ–Ω –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å"  # –ò–∑–º–µ–Ω–∏—Ç—å
            )
        else:
            await callback.message.edit_reply_markup(reply_markup=None)
        await callback.message.answer(
            text=f"–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_comment} \n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
            reply_markup=get_callback_buttons(
                buttons={
                    "969": "set_camera_comment_969",
                    "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_comment",  # –ò–∑–º–µ–Ω–∏—Ç—å
                    "üîé –ù–∞–π—Ç–∏": "search",
                    "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                },
                sizes=(1, 1, 2),
            ),
        )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )


@router.callback_query(
    F.data.startswith("set_camera_comment_"),  # –ò–∑–º–µ–Ω–∏—Ç—å
)
async def set_camera_comment_N_callback(
    callback: types.CallbackQuery,
):  # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    –ö–æ–º–∞–Ω–¥–∞ "set_camera_comment_N" (–∫–æ–ª–ª–±—ç–∫) # –ò–∑–º–µ–Ω–∏—Ç—å
    """
    try:
        value = callback.data.split("_")[3]  # –ò–∑–º–µ–Ω–∏—Ç—å
        if value in ("969"):  # –ò–∑–º–µ–Ω–∏—Ç—å
            user_id = callback.from_user.id
            user = await user_service.get_by_id(user_id=user_id)
            if user.camera_comment != value:  # –ò–∑–º–µ–Ω–∏—Ç—å
                user.camera_comment = value  # –ò–∑–º–µ–Ω–∏—Ç—å
                if await user_service.update(user=user):
                    await callback.message.edit_text(
                        text=f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω—ë–Ω\n–ó–Ω–∞—á–µ–Ω–∏–µ: {user.camera_comment}\n–ò–∑–º–µ–Ω–∏—Ç—å?",  # –ò–∑–º–µ–Ω–∏—Ç—å
                        reply_markup=get_callback_buttons(
                            buttons={
                                "969": "set_camera_comment_969",
                                "‚ùå –ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏ –ø–æ–∏—Å–∫–µ": "off_camera_comment",  # –ò–∑–º–µ–Ω–∏—Ç—å
                                "üîé –ù–∞–π—Ç–∏": "search",
                                "üõ† –î—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": "parameters_edit",
                            },
                            sizes=(1, 1, 2),
                        ),
                    )
    except Exception as e:
        print("error:", e)
        await callback.message.answer(
            text=error_text,
        )
